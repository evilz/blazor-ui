@page "/posts"
@rendermode InteractiveServer
@using BlazorApp.Models
@using BlazorApp.Services
@inject IJsonPlaceholderService JsonPlaceholderService

<PageTitle>Posts - Blazor UI</PageTitle>

<div class="page-header">
    <Breadcrumb Items="@breadcrumbItems" />
    <h1>Posts</h1>
    <p>Browse posts from JSONPlaceholder API</p>
</div>

@if (isLoading)
{
    <div class="loading">Loading posts...</div>
}
else if (posts.Count == 0)
{
    <Card>
        <CardContent>
            <p>No posts found.</p>
        </CardContent>
    </Card>
}
else
{
    <div class="posts-grid">
        @foreach (var post in posts.Take(20))
        {
            <Card>
                <CardHeader>
                    <div class="post-header">
                        <h3>@post.Title</h3>
                        <Badge Text="@($"User {post.UserId}")" Type="BadgeType.Secondary" />
                    </div>
                </CardHeader>
                <CardContent>
                    <p class="post-body">@post.Body</p>
                    <small class="post-id">Post #@post.Id</small>
                </CardContent>
            </Card>
        }
    </div>
}

@code {
    private List<Post> posts = new();
    private bool isLoading = true;
    private List<Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel> breadcrumbItems = new();

    protected override void OnInitialized()
    {
        breadcrumbItems = new List<Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel>
        {
            new Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel("Home") { Url = "/" },
            new Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel("Posts") { Url = "/posts" }
        };
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            posts = await JsonPlaceholderService.GetPostsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading posts: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}

<style>
    .page-header {
        margin-bottom: 2rem;
    }

    .page-header h1 {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.25rem;
        color: #1e293b;
    }

    .page-header p {
        color: #64748b;
        margin: 0;
    }

    .loading {
        text-align: center;
        padding: 2rem;
        color: #64748b;
    }

    .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
    }

    .post-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        gap: 1rem;
    }

    .post-header h3 {
        margin: 0;
        font-size: 1.125rem;
        font-weight: 600;
        color: #1e293b;
        text-transform: capitalize;
    }

    .post-body {
        color: #475569;
        line-height: 1.6;
        margin: 0 0 1rem 0;
    }

    .post-id {
        color: #94a3b8;
        font-size: 0.875rem;
    }
</style>
