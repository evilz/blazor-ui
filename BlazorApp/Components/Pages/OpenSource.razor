@page "/opensource"
@rendermode InteractiveServer
@using BlazorApp.Models

<PageTitle>Open Source Projects - Blazor UI</PageTitle>

<div class="page-header">
    <Breadcrumb Items="@breadcrumbItems" />
    <h1>Open Source Projects</h1>
    <p>Discover amazing open source projects from the community</p>
</div>

<div class="filter-section">
    <div class="filter-tabs">
        <button class="@(selectedCategory == "All" ? "active" : "")" @onclick="@(() => FilterByCategory("All"))">All</button>
        <button class="@(selectedCategory == "Web" ? "active" : "")" @onclick="@(() => FilterByCategory("Web"))">Web</button>
        <button class="@(selectedCategory == "Mobile" ? "active" : "")" @onclick="@(() => FilterByCategory("Mobile"))">Mobile</button>
        <button class="@(selectedCategory == "Desktop" ? "active" : "")" @onclick="@(() => FilterByCategory("Desktop"))">Desktop</button>
        <button class="@(selectedCategory == "AI/ML" ? "active" : "")" @onclick="@(() => FilterByCategory("AI/ML"))">AI/ML</button>
    </div>
</div>

<div class="projects-grid">
    @foreach (var project in filteredProjects)
    {
        <Card Style="min-width: 320px;">
            <CardContent>
                <div class="project-card">
                    <div class="project-header">
                        <div class="project-icon">@project.Icon</div>
                        <div class="project-title-section">
                            <h3>@project.Name</h3>
                            <span class="project-category">@project.Category</span>
                        </div>
                    </div>
                    <p class="project-description">@project.Description</p>
                    <div class="project-technologies">
                        @foreach (var tech in project.Technologies)
                        {
                            <span class="tech-tag">@tech</span>
                        }
                    </div>
                    <div class="project-stats">
                        <div class="stat-item">
                            <Icon Name="star" Size="18px" />
                            <span>@project.Stars.ToString("N0")</span>
                        </div>
                        <div class="stat-item">
                            <Icon Name="call_split" Size="18px" />
                            <span>@project.Forks.ToString("N0")</span>
                        </div>
                    </div>
                </div>
            </CardContent>
            <CardFooter>
                <div class="project-actions">
                    @if (!string.IsNullOrEmpty(project.RepositoryUrl))
                    {
                        <Button Text="Repository" Icon="code" Type="ButtonType.Secondary" Size="ButtonSize.Small" OnClick="@(() => OpenUrl(project.RepositoryUrl))" />
                    }
                    @if (!string.IsNullOrEmpty(project.DemoUrl))
                    {
                        <Button Text="Live Demo" Icon="open_in_new" Size="ButtonSize.Small" OnClick="@(() => OpenUrl(project.DemoUrl))" />
                    }
                </div>
            </CardFooter>
        </Card>
    }
</div>

@code {
    private List<Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel> breadcrumbItems = new();
    private List<Project> projects = new();
    private List<Project> filteredProjects = new();
    private string selectedCategory = "All";

    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;

    protected override void OnInitialized()
    {
        breadcrumbItems = new List<Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel>
        {
            new Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel("Home") { Url = "/" },
            new Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel("Open Source") { Url = "/opensource" }
        };

        // Sample projects data
        projects = new List<Project>
        {
            new Project
            {
                Id = 1,
                Name = "Blazor UI",
                Description = "Modern Blazor UI components library with beautiful designs",
                Icon = "🎨",
                Technologies = new[] { "Blazor", "C#", ".NET 9" },
                Stars = 1234,
                Forks = 89,
                RepositoryUrl = "https://github.com/evilz/blazor-ui",
                DemoUrl = "https://blazor-ui.demo.com",
                Category = "Web"
            },
            new Project
            {
                Id = 2,
                Name = "React Native Components",
                Description = "Cross-platform mobile UI components for React Native apps",
                Icon = "📱",
                Technologies = new[] { "React Native", "TypeScript", "JavaScript" },
                Stars = 5678,
                Forks = 432,
                RepositoryUrl = "https://github.com/example/react-native-components",
                DemoUrl = "",
                Category = "Mobile"
            },
            new Project
            {
                Id = 3,
                Name = "ML Toolkit",
                Description = "Comprehensive machine learning toolkit for data scientists",
                Icon = "🤖",
                Technologies = new[] { "Python", "TensorFlow", "PyTorch" },
                Stars = 9876,
                Forks = 1234,
                RepositoryUrl = "https://github.com/example/ml-toolkit",
                DemoUrl = "https://ml-toolkit.demo.com",
                Category = "AI/ML"
            },
            new Project
            {
                Id = 4,
                Name = "Electron Dashboard",
                Description = "Beautiful cross-platform desktop dashboard application",
                Icon = "💻",
                Technologies = new[] { "Electron", "React", "Node.js" },
                Stars = 3456,
                Forks = 234,
                RepositoryUrl = "https://github.com/example/electron-dashboard",
                DemoUrl = "",
                Category = "Desktop"
            },
            new Project
            {
                Id = 5,
                Name = "Vue Admin Template",
                Description = "Professional admin dashboard template built with Vue.js",
                Icon = "📊",
                Technologies = new[] { "Vue.js", "JavaScript", "Tailwind CSS" },
                Stars = 2345,
                Forks = 345,
                RepositoryUrl = "https://github.com/example/vue-admin",
                DemoUrl = "https://vue-admin.demo.com",
                Category = "Web"
            },
            new Project
            {
                Id = 6,
                Name = "Flutter UI Kit",
                Description = "Complete UI kit for Flutter mobile applications",
                Icon = "🎯",
                Technologies = new[] { "Flutter", "Dart" },
                Stars = 4567,
                Forks = 567,
                RepositoryUrl = "https://github.com/example/flutter-ui-kit",
                DemoUrl = "",
                Category = "Mobile"
            },
            new Project
            {
                Id = 7,
                Name = "Neural Network Library",
                Description = "Lightweight neural network library for edge devices",
                Icon = "🧠",
                Technologies = new[] { "C++", "Python", "CUDA" },
                Stars = 6789,
                Forks = 890,
                RepositoryUrl = "https://github.com/example/neural-network-lib",
                DemoUrl = "https://nn-lib.demo.com",
                Category = "AI/ML"
            },
            new Project
            {
                Id = 8,
                Name = "Next.js Starter",
                Description = "Production-ready Next.js starter template with TypeScript",
                Icon = "🚀",
                Technologies = new[] { "Next.js", "TypeScript", "React" },
                Stars = 3210,
                Forks = 456,
                RepositoryUrl = "https://github.com/example/nextjs-starter",
                DemoUrl = "https://nextjs-starter.demo.com",
                Category = "Web"
            },
            new Project
            {
                Id = 9,
                Name = "WPF Modern UI",
                Description = "Modern UI library for Windows Presentation Foundation apps",
                Icon = "🖥️",
                Technologies = new[] { "C#", "WPF", ".NET" },
                Stars = 2890,
                Forks = 234,
                RepositoryUrl = "https://github.com/example/wpf-modern-ui",
                DemoUrl = "",
                Category = "Desktop"
            }
        };

        filteredProjects = projects;
    }

    private void FilterByCategory(string category)
    {
        selectedCategory = category;
        filteredProjects = category == "All" 
            ? projects 
            : projects.Where(p => p.Category == category).ToList();
    }

    private async Task OpenUrl(string url)
    {
        await JSRuntime.InvokeVoidAsync("open", url, "_blank");
    }
}

<style>
    .page-header {
        margin-bottom: 2rem;
    }

    .page-header h1 {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.25rem;
        color: #1e293b;
    }

    .page-header p {
        color: #64748b;
        margin: 0;
    }

    .filter-section {
        margin-bottom: 2rem;
    }

    .filter-tabs {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .filter-tabs button {
        padding: 0.5rem 1rem;
        background: transparent;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        color: #475569;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s;
    }

    .filter-tabs button:hover {
        background: #f1f5f9;
        border-color: #cbd5e1;
    }

    .filter-tabs button.active {
        background: #3b82f6;
        color: white;
        border-color: #3b82f6;
    }

    .projects-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 1.5rem;
    }

    .project-card {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .project-header {
        display: flex;
        gap: 1rem;
        align-items: flex-start;
    }

    .project-icon {
        font-size: 2.5rem;
        line-height: 1;
    }

    .project-title-section {
        flex: 1;
    }

    .project-card h3 {
        font-size: 1.25rem;
        font-weight: 600;
        margin: 0 0 0.25rem 0;
        color: #1e293b;
    }

    .project-category {
        display: inline-block;
        padding: 0.125rem 0.5rem;
        background: #f1f5f9;
        color: #475569;
        font-size: 0.75rem;
        border-radius: 0.25rem;
        font-weight: 500;
    }

    .project-description {
        color: #64748b;
        font-size: 0.875rem;
        line-height: 1.5;
        margin: 0;
    }

    .project-technologies {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .tech-tag {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        background: #eff6ff;
        color: #2563eb;
        font-size: 0.75rem;
        border-radius: 9999px;
        font-weight: 500;
    }

    .project-stats {
        display: flex;
        gap: 1.5rem;
        padding-top: 0.5rem;
        border-top: 1px solid #f1f5f9;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 0.375rem;
        color: #64748b;
        font-size: 0.875rem;
    }

    .project-actions {
        display: flex;
        gap: 0.5rem;
        width: 100%;
    }

    .project-actions > :global(*) {
        flex: 1;
    }
</style>
