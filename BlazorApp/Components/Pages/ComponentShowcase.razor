@page "/components"
@rendermode InteractiveServer

<PageTitle>Component Showcase - Blazor UI</PageTitle>

<div class="showcase-container">
    <div class="page-header">
        <Breadcrumb Items="@breadcrumbItems" />
        <div class="header-content">
            <h1>Component Showcase</h1>
            <p class="header-description">A comprehensive collection of UI components built with Simple-UI. Explore cards, forms, charts, and interactive elements.</p>
        </div>
    </div>

    <!-- Components Grid -->
    <div class="components-section">
        <div class="section-header">
            <h2>User Interface Components</h2>
            <p>Interactive components for building modern web applications</p>
        </div>
        
        <div class="components-grid">
            <!-- User Profile Card with Avatar -->
            <Card>
                <CardHeader>
                    <div class="card-title-wrapper">
                        <div class="header-with-avatar">
                            <Avatar Name="John Doe" Background="seagreen" />
                            <div>
                                <h3>User Profile</h3>
                                <p class="subtitle">Active Account</p>
                            </div>
                        </div>
                    </div>
                </CardHeader>
        <CardContent>
            <div class="profile-info">
                <div class="info-row">
                    <Icon Name="email" />
                    <span>john.doe@example.com</span>
                </div>
                <div class="info-row">
                    <Icon Name="phone" />
                    <span>+1 234 567 8900</span>
                </div>
                <div class="info-row">
                    <Icon Name="location_on" />
                    <span>San Francisco, CA</span>
                </div>
            </div>
        </CardContent>
                <CardFooter>
                    <div class="card-footer-actions">
                        <Button Text="Edit Profile" Type="ButtonType.Outline" OnClick="@(() => { })" />
                        <Button Text="Settings" OnClick="@(() => { })" />
                    </div>
                </CardFooter>
            </Card>

            <!-- Form with Labels and Inputs -->
            <Card>
        <CardHeader>
            <h3>Contact Form</h3>
        </CardHeader>
        <CardContent>
            <div class="form-group">
                <Label Text="Full Name" />
                <Input @bind-Value="formData.Name" TItem="string" Placeholder="Enter your name" />
            </div>
            <div class="form-group">
                <Label Text="Email Address" />
                <Input @bind-Value="formData.Email" TItem="string" Type="email" Placeholder="your@email.com" />
            </div>
            <div class="form-group">
                <Label Text="Phone Number" />
                <Input @bind-Value="formData.Phone" TItem="string" Type="tel" Placeholder="+1 (555) 000-0000" />
            </div>
            <div class="checkbox-group">
                <div class="checkbox-item">
                    <input type="checkbox" @bind="formData.AcceptTerms" id="terms" class="form-check-input" />
                    <Label Text="I accept the terms and conditions" For="terms" />
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" @bind="formData.Newsletter" id="newsletter" class="form-check-input" />
                    <Label Text="Subscribe to newsletter" For="newsletter" />
                </div>
                <div class="checkbox-item">
                    <input type="checkbox" @bind="formData.Updates" id="updates" class="form-check-input" />
                    <Label Text="Receive product updates" For="updates" />
                </div>
            </div>
        </CardContent>
        <CardFooter>
            <Button Text="Submit" OnClick="@HandleSubmit" />
        </CardFooter>
            </Card>

            <!-- Date Selection Card -->
            <Card>
        <CardHeader>
            <div class="header-with-icon">
                <Icon Name="calendar_today" />
                <h3>Date Selection</h3>
            </div>
        </CardHeader>
                <CardContent>
                    <div class="form-group">
                        <Label Text="Select Date" />
                        <DatePicker Class="min-w-full" Date="@date" DateChanged="x => date = x" Placeholder="Pick a date" />
                    </div>
                </CardContent>
            </Card>
        </div>
    </div>

    <!-- Data Visualization Section -->
    <div class="components-section">
        <div class="section-header">
            <h2>Data Visualization</h2>
            <p>Charts and statistics to display your data effectively</p>
        </div>
        
        <div class="components-grid full-width">
            <!-- Data Visualization Card -->
            <Card>
        <CardHeader>
            <div class="header-with-icon">
                <Icon Name="bar_chart" />
                <h3>Sales Performance</h3>
            </div>
        </CardHeader>
        <CardContent>
            <div class="chart-placeholder">
                <div class="chart-bars">
                    <div class="chart-bar" style="height: 65%;"><span>65</span></div>
                    <div class="chart-bar" style="height: 59%;"><span>59</span></div>
                    <div class="chart-bar" style="height: 80%;"><span>80</span></div>
                    <div class="chart-bar" style="height: 81%;"><span>81</span></div>
                    <div class="chart-bar" style="height: 56%;"><span>56</span></div>
                    <div class="chart-bar" style="height: 75%;"><span>75</span></div>
                </div>
                <div class="chart-labels">
                    <span>Jan</span>
                    <span>Feb</span>
                    <span>Mar</span>
                    <span>Apr</span>
                    <span>May</span>
                    <span>Jun</span>
                </div>
            </div>
                </CardContent>
            </Card>

            <!-- Statistics Card -->
            <Card>
                <CardHeader>
                    <h3>Statistics Overview</h3>
                </CardHeader>
                <CardContent>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <Icon Name="trending_up" Style="color: #16a34a;" />
                            <div>
                                <div class="stat-value">+12.5%</div>
                                <div class="stat-label">Growth</div>
                            </div>
                        </div>
                        <div class="stat-item">
                            <Icon Name="people" Style="color: #3b82f6;" />
                            <div>
                                <div class="stat-value">2,543</div>
                                <div class="stat-label">Users</div>
                            </div>
                        </div>
                        <div class="stat-item">
                            <Icon Name="shopping_cart" Style="color: #f59e0b;" />
                            <div>
                                <div class="stat-value">1,234</div>
                                <div class="stat-label">Orders</div>
                            </div>
                        </div>
                        <div class="stat-item">
                            <Icon Name="attach_money" Style="color: #10b981;" />
                            <div>
                                <div class="stat-value">$45.2K</div>
                                <div class="stat-label">Revenue</div>
                            </div>
                        </div>
                    </div>
                </CardContent>
            </Card>
        </div>
    </div>

    <!-- Team & Collaboration Section -->
    <div class="components-section">
        <div class="section-header">
            <h2>Team & Collaboration</h2>
            <p>Manage team members and notifications</p>
        </div>
        
        <div class="components-grid">
            <!-- Team Members with Avatars -->
            <Card>
                <CardHeader>
                    <h3>Team Members</h3>
                </CardHeader>
                <CardContent>
                    <div class="team-list">
                        @foreach (var member in teamMembers)
                        {
                            <div class="team-member">
                                <Avatar Name="@member.Name" ImageUrl="" />
                                <div class="member-info">
                                    <div class="member-name">@member.Name</div>
                                    <div class="member-role">@member.Role</div>
                                </div>
                                <input type="checkbox" @bind="member.IsSelected" class="form-check-input" />
                            </div>
                        }
                    </div>
                </CardContent>
                <CardFooter>
                    <Button Text="Invite Members" OnClick="@(() => { })" />
                </CardFooter>
            </Card>

            <!-- Actions Card -->
            <Card>
                <CardHeader>
                    <div class="header-with-icon">
                        <Icon Name="apps" />
                        <h3>Quick Actions</h3>
                    </div>
                </CardHeader>
                <CardContent>
                    <div class="action-buttons">
                        <Button Text="New Document" OnClick="@(() => { })" Style="width: 100%;" />
                        <Button Text="Upload File" OnClick="@(() => { })" Style="width: 100%;" />
                        <Button Text="Share" OnClick="@(() => { })" Style="width: 100%;" />
                        <Button Text="Settings" OnClick="@(() => { })" Style="width: 100%;" />
                    </div>
                </CardContent>
            </Card>

            <!-- Notifications Card -->
            <Card>
                <CardHeader>
                    <div class="header-with-icon">
                        <Icon Name="notifications" />
                        <h3>Notifications</h3>
                    </div>
                </CardHeader>
                <CardContent>
                    <div class="notification-list">
                        @foreach (var notification in notifications)
                        {
                            <div class="notification-item">
                                <Avatar Name="@notification.From" ImageUrl="" />
                                <div class="notification-content">
                                    <div class="notification-title">@notification.Title</div>
                                    <div class="notification-time">@notification.Time</div>
                                </div>
                                <input type="checkbox" @bind="notification.IsRead" class="form-check-input" />
                            </div>
                        }
                    </div>
                </CardContent>
            </Card>
        </div>
    </div>
</div>

@code {
    private List<Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel> breadcrumbItems = new();
    private FormData formData = new();
    private string selectedDateString = DateTime.Now.ToString("yyyy-MM-dd");
    
    private  DateTime? date, date1 = DateTime.Now;
 
    
    private List<TeamMember> teamMembers = new()
    {
        new TeamMember { Name = "Alice Johnson", Role = "Project Manager", IsSelected = true },
        new TeamMember { Name = "Bob Smith", Role = "Developer", IsSelected = false },
        new TeamMember { Name = "Carol White", Role = "Designer", IsSelected = true },
        new TeamMember { Name = "David Brown", Role = "QA Engineer", IsSelected = false }
    };

    private List<Notification> notifications = new()
    {
        new Notification { From = "System", Title = "New update available", Time = "2 min ago", IsRead = false },
        new Notification { From = "Admin", Title = "Maintenance scheduled", Time = "1 hour ago", IsRead = false },
        new Notification { From = "Team", Title = "Meeting reminder", Time = "3 hours ago", IsRead = true }
    };

    protected override void OnInitialized()
    {
        breadcrumbItems = new List<Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel>
        {
            new Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel("Home") { Url = "/" },
            new Sysinfocus.AspNetCore.Components.Breadcrumb.BreadcrumbModel("Components") { Url = "/components" }
        };
    }

    private void HandleSubmit()
    {
        // Handle form submission
    }

    public class FormData
    {
        public string Name { get; set; } = "";
        public string Email { get; set; } = "";
        public string Phone { get; set; } = "";
        public bool AcceptTerms { get; set; }
        public bool Newsletter { get; set; }
        public bool Updates { get; set; }
    }

    public class TeamMember
    {
        public string Name { get; set; } = "";
        public string Role { get; set; } = "";
        public bool IsSelected { get; set; }
    }

    public class Notification
    {
        public string From { get; set; } = "";
        public string Title { get; set; } = "";
        public string Time { get; set; } = "";
        public bool IsRead { get; set; }
    }
}

<style>
    /* Showcase Container */
    .showcase-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    /* Page Header */
    .page-header {
        margin-bottom: 3rem;
        padding-top: 1rem;
    }

    .header-content {
        margin-top: 1rem;
    }

    .page-header h1 {
        font-size: 2.5rem;
        font-weight: 800;
        margin: 0 0 0.75rem 0;
        color: #0f172a;
        letter-spacing: -0.025em;
    }

    .header-description {
        font-size: 1.125rem;
        color: #64748b;
        margin: 0;
        line-height: 1.75;
        max-width: 700px;
    }

    /* Section Headers */
    .components-section {
        margin-bottom: 4rem;
    }

    .section-header {
        margin-bottom: 2rem;
    }

    .section-header h2 {
        font-size: 1.875rem;
        font-weight: 700;
        margin: 0 0 0.5rem 0;
        color: #1e293b;
    }

    .section-header p {
        font-size: 1rem;
        color: #64748b;
        margin: 0;
    }

    /* Components Grid */
    .components-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
        gap: 2rem;
    }

    .components-grid.full-width {
        grid-template-columns: 1fr;
    }

    /* Style Cards in Components Grid */
    .components-grid > div > div.sbc-card,
    .components-grid > div.sbc-card {
        border: 1px solid #e2e8f0;
        border-radius: 0.75rem;
        background: white;
        box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
        transition: all 0.2s ease;
        overflow: hidden;
    }

    .components-grid > div > div.sbc-card:hover,
    .components-grid > div.sbc-card:hover {
        box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        border-color: #cbd5e1;
    }

    /* Card Title Wrapper */
    .card-title-wrapper {
        padding: 0;
    }

    .card-title-wrapper h3 {
        font-size: 1.25rem;
        font-weight: 600;
        margin: 0;
        color: #1e293b;
    }

    .subtitle {
        font-size: 0.875rem;
        color: #64748b;
        margin: 0.25rem 0 0 0;
    }

    /* Header with Avatar */
    .header-with-avatar {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    /* Header with Icon */
    .header-with-icon {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .header-with-icon h3 {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 600;
        color: #1e293b;
    }

    /* Profile Info */
    .profile-info {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .info-row {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: #475569;
        font-size: 0.9375rem;
    }

    /* Form Elements */
    .form-group {
        margin-bottom: 1.25rem;
    }

    .checkbox-group {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        margin-top: 1.25rem;
    }

    .checkbox-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    /* Card Footer Actions */
    .card-footer-actions {
        display: flex;
        gap: 0.75rem;
        width: 100%;
        padding: 1.5rem;
        padding-top: 0;
    }

    /* Team List */
    .team-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .team-member {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        background: #f8fafc;
        transition: all 0.2s ease;
    }

    .team-member:hover {
        background: #f1f5f9;
        border-color: #cbd5e1;
    }

    .member-info {
        flex: 1;
    }

    .member-name {
        font-weight: 600;
        color: #1e293b;
        font-size: 0.9375rem;
    }

    .member-role {
        font-size: 0.875rem;
        color: #64748b;
        margin-top: 0.125rem;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    /* Statistics Grid */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 1.25rem;
        padding: 1.25rem;
        border: 1px solid #e2e8f0;
        border-radius: 0.75rem;
        background: linear-gradient(to bottom, #ffffff, #f8fafc);
        transition: all 0.2s ease;
    }

    .stat-item:hover {
        border-color: #cbd5e1;
        transform: translateY(-2px);
        box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    }

    .stat-value {
        font-size: 1.875rem;
        font-weight: 700;
        color: #0f172a;
        line-height: 1;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #64748b;
        margin-top: 0.375rem;
        font-weight: 500;
    }

    /* Notification List */
    .notification-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .notification-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem;
        background: #f8fafc;
        transition: all 0.2s ease;
    }

    .notification-item:hover {
        background: #f1f5f9;
        border-color: #cbd5e1;
    }

    .notification-content {
        flex: 1;
    }

    .notification-title {
        font-weight: 600;
        color: #1e293b;
        font-size: 0.9375rem;
    }

    .notification-time {
        font-size: 0.8125rem;
        color: #64748b;
        margin-top: 0.125rem;
    }

    /* Chart Placeholder */
    .chart-placeholder {
        padding: 2rem 1rem;
    }

    .chart-bars {
        display: flex;
        align-items: flex-end;
        justify-content: space-around;
        height: 300px;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .chart-bar {
        flex: 1;
        background: linear-gradient(180deg, #3b82f6 0%, #1d4ed8 100%);
        border-radius: 0.5rem 0.5rem 0 0;
        display: flex;
        align-items: flex-start;
        justify-content: center;
        padding-top: 0.75rem;
        color: white;
        font-weight: 700;
        min-width: 50px;
        font-size: 0.9375rem;
        box-shadow: 0 4px 6px -1px rgb(59 130 246 / 0.3);
        transition: all 0.2s ease;
    }

    .chart-bar:hover {
        transform: scaleY(1.05);
        box-shadow: 0 10px 15px -3px rgb(59 130 246 / 0.4);
    }

    .chart-labels {
        display: flex;
        justify-content: space-around;
        color: #64748b;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .chart-labels span {
        flex: 1;
        text-align: center;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .page-header h1 {
            font-size: 2rem;
        }

        .components-grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }

        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .chart-bars {
            gap: 0.75rem;
        }

        .stat-value {
            font-size: 1.5rem;
        }
    }
</style>
