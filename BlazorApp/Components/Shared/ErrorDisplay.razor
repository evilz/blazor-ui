@* Reusable error boundary component for better error handling *@

<div class="error-boundary-container @Class">
    <div class="error-icon">
        <Icon Name="error_outline" Size="64px" />
    </div>
    <h2 class="error-title">@Title</h2>
    <p class="error-message">@Message</p>
    @if (ShowDetails && !string.IsNullOrEmpty(Details))
    {
        <details class="error-details">
            <summary>Technical Details</summary>
            <pre class="error-details-content">@Details</pre>
        </details>
    }
    @if (OnRetry.HasDelegate)
    {
        <div class="error-actions">
            <Button Text="Try Again" Icon="refresh" Type="ButtonType.Primary" OnClick="OnRetry" />
        </div>
    }
</div>

<style>
    .error-boundary-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 3rem 2rem;
        text-align: center;
        min-height: 300px;
    }

    .error-icon {
        color: #dc2626;
        margin-bottom: 1rem;
    }

    .error-title {
        margin: 0 0 0.5rem 0;
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-primary);
    }

    .error-message {
        margin: 0 0 1rem 0;
        font-size: 1rem;
        color: var(--text-secondary);
        max-width: 500px;
    }

    .error-details {
        margin: 1rem 0;
        text-align: left;
        max-width: 600px;
        width: 100%;
    }

    .error-details summary {
        cursor: pointer;
        font-size: 0.875rem;
        color: var(--text-secondary);
        padding: 0.5rem;
        border-radius: 4px;
        background: var(--background-secondary);
    }

    .error-details summary:hover {
        background: var(--background-hover);
    }

    .error-details-content {
        margin: 0.5rem 0 0 0;
        padding: 1rem;
        background: #f9fafb;
        border: 1px solid var(--border-color);
        border-radius: 4px;
        font-size: 0.75rem;
        overflow-x: auto;
        white-space: pre-wrap;
        word-wrap: break-word;
    }

    .error-actions {
        margin-top: 1.5rem;
    }
</style>

@code {
    /// <summary>
    /// Additional CSS classes to apply to the container
    /// </summary>
    [Parameter]
    public string Class { get; set; } = string.Empty;

    /// <summary>
    /// Error title
    /// </summary>
    [Parameter]
    public string Title { get; set; } = "Something went wrong";

    /// <summary>
    /// Error message
    /// </summary>
    [Parameter]
    public string Message { get; set; } = "An unexpected error occurred. Please try again later.";

    /// <summary>
    /// Technical details about the error
    /// </summary>
    [Parameter]
    public string Details { get; set; } = string.Empty;

    /// <summary>
    /// Whether to show technical details
    /// </summary>
    [Parameter]
    public bool ShowDetails { get; set; } = false;

    /// <summary>
    /// Callback for retry action
    /// </summary>
    [Parameter]
    public EventCallback OnRetry { get; set; }
}
