@using BlazorApp.Models
@using Blazor.Diagrams.Core.Models
@using Blazor.Diagrams.Components.Renderers
@inherits ComponentBase

<div class="db-table">
    @* Render ports on all four sides *@
    @foreach (var port in Node.Ports)
    {
        <PortRenderer Port="port" Class="@GetPortClass(port)" />
    }
    
    <div class="table-header">
        <Icon Name="table_chart" Size="18px" />
        <input type="text" class="table-name-input" @bind="Node.TableName" @bind:event="oninput" />
        <Icon Name="close" Size="16px" Class="table-close" @onclick="RemoveTable" />
    </div>
    <div class="table-fields">
        @foreach (var field in Node.Fields)
        {
            <div class="table-field">
                <div class="field-info">
                    @if (field.IsPrimaryKey)
                    {
                        <Icon Name="key" Size="14px" Class="field-icon key-icon" @onclick="@(() => TogglePrimaryKey(field))" style="cursor: pointer;" />
                    }
                    else
                    {
                        <Icon Name="circle" Size="14px" Class="field-icon" @onclick="@(() => TogglePrimaryKey(field))" style="cursor: pointer; opacity: 0.3;" />
                    }
                    <input type="text" class="field-name-input" @bind="field.Name" @bind:event="oninput" />
                </div>
                <div class="field-actions">
                    <select class="field-type-select" @bind="field.Type">
                        @foreach (var type in DatabaseFieldTypes.Types)
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                    <Icon Name="delete" Size="14px" Class="field-delete" @onclick="@(() => RemoveField(field))" />
                </div>
            </div>
        }
    </div>
    <div class="table-footer">
        <Button Text="Add Field" Icon="add" Size="ButtonSize.Small" OnClick="@AddField" />
    </div>
</div>

@code {
    [CascadingParameter] public BlazorDiagram Diagram { get; set; } = null!;
    [Parameter] public TableNode Node { get; set; } = null!;

    private void AddField()
    {
        Node.AddField(new TableField($"field{Node.Fields.Count + 1}", "VarChar"));
    }

    private void RemoveField(TableField field)
    {
        Node.RemoveField(field);
    }

    private void RemoveTable()
    {
        Diagram.Nodes.Remove(Node);
    }

    private void TogglePrimaryKey(TableField field)
    {
        // Remove primary key from all other fields in this table
        foreach (var f in Node.Fields)
        {
            if (f != field)
            {
                f.IsPrimaryKey = false;
            }
        }
        // Toggle current field
        field.IsPrimaryKey = !field.IsPrimaryKey;
    }

    private string GetPortClass(PortModel port)
    {
        return port.Alignment switch
        {
            PortAlignment.Top => "port-top",
            PortAlignment.Right => "port-right",
            PortAlignment.Bottom => "port-bottom",
            PortAlignment.Left => "port-left",
            _ => ""
        };
    }
}

<style>
    .db-table {
        min-width: 280px;
        background: var(--card-background, #ffffff);
        border: 2px solid var(--border-color, #cbd5e1);
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        cursor: move;
        transition: box-shadow 0.2s;
        position: relative;
    }

    /* Port styles */
    .db-table :deep(.port-top),
    .db-table :deep(.port-right),
    .db-table :deep(.port-bottom),
    .db-table :deep(.port-left) {
        width: 12px;
        height: 12px;
        background: #3b82f6;
        border: 2px solid #ffffff;
        border-radius: 50%;
        position: absolute;
        cursor: crosshair;
        transition: all 0.2s;
        z-index: 10;
        transform-origin: center;
    }

    .db-table :deep(.port-top):hover,
    .db-table :deep(.port-right):hover,
    .db-table :deep(.port-bottom):hover,
    .db-table :deep(.port-left):hover {
        transform: scale(1.33);
        background: #667eea;
        box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.2);
    }

    .db-table :deep(.port-top) {
        top: 0;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .db-table :deep(.port-top):hover {
        transform: translate(-50%, -50%) scale(1.33);
    }

    .db-table :deep(.port-right) {
        top: 50%;
        right: 0;
        transform: translate(50%, -50%);
    }

    .db-table :deep(.port-right):hover {
        transform: translate(50%, -50%) scale(1.33);
    }

    .db-table :deep(.port-bottom) {
        bottom: 0;
        left: 50%;
        transform: translate(-50%, 50%);
    }

    .db-table :deep(.port-bottom):hover {
        transform: translate(-50%, 50%) scale(1.33);
    }

    .db-table :deep(.port-left) {
        top: 50%;
        left: 0;
        transform: translate(-50%, -50%);
    }

    .db-table :deep(.port-left):hover {
        transform: translate(-50%, -50%) scale(1.33);
    }


    .db-table:hover {
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        border-color: var(--primary-color, #3b82f6);
    }

    .table-header {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 0.375rem 0.375rem 0 0;
        font-weight: 600;
    }

    .table-name-input {
        flex: 1;
        background: transparent;
        border: none;
        color: white;
        font-weight: 600;
        font-size: 1rem;
        outline: none;
        padding: 0.25rem;
    }

    .table-name-input:focus {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 0.25rem;
    }

    .table-close {
        cursor: pointer;
        opacity: 0.7;
        transition: opacity 0.2s;
    }

    .table-close:hover {
        opacity: 1;
    }

    .table-fields {
        padding: 0.5rem 0;
        min-height: 50px;
    }

    .table-field {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 1rem;
        border-bottom: 1px solid var(--border-color, #f1f5f9);
        font-size: 0.875rem;
        gap: 0.5rem;
    }

    .table-field:last-child {
        border-bottom: none;
    }

    .table-field:hover {
        background: var(--hover-background, #f8fafc);
    }

    .field-info {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex: 1;
        min-width: 0;
    }

    .field-icon {
        color: var(--muted-color, #64748b);
        flex-shrink: 0;
    }

    .field-icon.key-icon {
        color: #f59e0b;
    }

    .field-name-input {
        background: transparent;
        border: none;
        color: var(--text-color, #1e293b);
        font-weight: 500;
        font-size: 0.875rem;
        outline: none;
        padding: 0.25rem;
        flex: 1;
        min-width: 0;
    }

    .field-name-input:focus {
        background: var(--input-focus-background, #f1f5f9);
        border-radius: 0.25rem;
    }

    .field-actions {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex-shrink: 0;
    }

    .field-type-select {
        color: var(--muted-color, #64748b);
        font-size: 0.8125rem;
        font-family: 'Courier New', monospace;
        background: transparent;
        border: 1px solid var(--border-color, #e2e8f0);
        border-radius: 0.25rem;
        padding: 0.25rem 0.5rem;
        outline: none;
        cursor: pointer;
    }

    .field-type-select:focus {
        border-color: var(--primary-color, #3b82f6);
        background: var(--card-background, #ffffff);
    }

    .field-delete {
        color: var(--muted-color, #64748b);
        cursor: pointer;
        opacity: 0.6;
        transition: opacity 0.2s, color 0.2s;
        flex-shrink: 0;
    }

    .field-delete:hover {
        opacity: 1;
        color: #ef4444;
    }

    .table-footer {
        padding: 0.5rem 1rem;
        border-top: 1px solid var(--border-color, #e2e8f0);
        background: var(--footer-background, #f8fafc);
        border-radius: 0 0 0.375rem 0.375rem;
    }

    /* Dark theme support */
    @@media (prefers-color-scheme: dark) {
        .db-table {
            background: #1e293b;
            border-color: #475569;
        }

        .db-table:hover {
            border-color: #667eea;
        }

        .table-name-input {
            color: white;
        }

        .table-field {
            border-bottom-color: #334155;
        }

        .table-field:hover {
            background: #334155;
        }

        .field-name-input {
            color: #f1f5f9;
        }

        .field-name-input:focus {
            background: #334155;
        }

        .field-type-select {
            color: #94a3b8;
            background: #1e293b;
            border-color: #475569;
        }

        .field-type-select:focus {
            border-color: #667eea;
            background: #334155;
        }

        .table-footer {
            border-top-color: #334155;
            background: #334155;
        }
    }
</style>
